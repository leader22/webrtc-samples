/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./docs/enhanced-datachannel/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./docs/_shared/global.js":
/*!********************************!*\
  !*** ./docs/_shared/global.js ***!
  \********************************/
/*! exports provided: pageId, signalingKey, $ */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pageId\", function() { return pageId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signalingKey\", function() { return signalingKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"$\", function() { return $; });\nconst pageId = location.pathname\n  .split(\"/\")\n  .filter(Boolean)\n  .pop();\n\nconst signalingKey = localStorage.getItem(\"SIGNALING_KEY\");\n\nfunction $(query) {\n  const $els = document.querySelectorAll(query);\n  if ($els.length === 0) {\n    throw new Error(`${query} not found!`);\n  }\n  if ($els.length === 1) {\n    return $els[0];\n  }\n  return $els;\n}\n\n\n//# sourceURL=webpack:///./docs/_shared/global.js?");

/***/ }),

/***/ "./docs/enhanced-datachannel/main.js":
/*!*******************************************!*\
  !*** ./docs/enhanced-datachannel/main.js ***!
  \*******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var enhanced_datachannel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! enhanced-datachannel */ \"./node_modules/enhanced-datachannel/lib/index.js\");\n/* harmony import */ var enhanced_datachannel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(enhanced_datachannel__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_shared/global */ \"./docs/_shared/global.js\");\n\n\nconst { createChannel } = window.External;\n\n(async () => {\n  Object(_shared_global__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(\"#connect\").onclick = async () => {\n    const ch = await createChannel(_shared_global__WEBPACK_IMPORTED_MODULE_1__[\"signalingKey\"], _shared_global__WEBPACK_IMPORTED_MODULE_1__[\"pageId\"]);\n\n    const users = await ch.fetchUsers();\n    console.log(users);\n\n    const role = users.length === 1 ? \"answer\" : \"offer\";\n    if (role === \"offer\") console.log(\"Create and send offer...\");\n    if (role === \"answer\") console.log(\"Wait for offer...\");\n\n    const pcConf = {\n      bundlePolicy: \"max-bundle\",\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n    };\n    const pc = (window.pc = new RTCPeerConnection(pcConf));\n    console.log(\"pc created w/\", pcConf);\n\n    const dcInit = { negotiated: true, id: 1 };\n    const dc = (window.dc = pc.createDataChannel(_shared_global__WEBPACK_IMPORTED_MODULE_1__[\"pageId\"], dcInit));\n    console.log(\"dc created w/\", dcInit);\n\n    pc.onicecandidate = ev => {\n      console.warn(\"onicecandidate\");\n      if (ev.candidate === null) return;\n      if (ev.candidate.candidate === \"\") return;\n\n      ch.send(ev.candidate);\n      console.log(\"send icecandidate\", ev.candidate);\n    };\n\n    ch.on(\"@message\", async ({ data }) => {\n      if (data.type === \"offer\") {\n        console.log(\"receive offer\");\n        console.warn(data.sdp);\n        await Promise.all([\n          pc.setRemoteDescription(data),\n          pc.createAnswer().then(answer => pc.setLocalDescription(answer))\n        ]);\n        console.log(\"send answer\");\n        ch.send(pc.localDescription);\n        console.warn(pc.localDescription.sdp);\n      }\n      if (data.type === \"answer\") {\n        console.log(\"receive answer\");\n        console.warn(data.sdp);\n        await pc.setRemoteDescription(data);\n      }\n      if (data.candidate) {\n        console.log(\"receive candidate\");\n        await pc.addIceCandidate(data);\n      }\n    });\n\n    if (role === \"offer\") {\n      await pc.createOffer().then(offer => pc.setLocalDescription(offer));\n      ch.send(pc.localDescription);\n      console.log(\"send offer\");\n      console.warn(pc.localDescription.sdp);\n    }\n\n    dc.onopen = () => {\n      console.warn(\"dc.onopen\");\n\n      const pdc = (window.pdc = Object(enhanced_datachannel__WEBPACK_IMPORTED_MODULE_0__[\"promised\"])(dc));\n      pdc.on(\"message\", (data, accept) => {\n        accept(navigator.userAgent);\n      });\n\n      Object(_shared_global__WEBPACK_IMPORTED_MODULE_1__[\"$\"])(\"#ask\").onclick = async () => {\n        const res = await pdc.send(\"What is your UA?\");\n        console.log(res);\n      };\n    };\n  };\n})();\n\n\n//# sourceURL=webpack:///./docs/enhanced-datachannel/main.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/lib/based-datachannel.js":
/*!********************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/lib/based-datachannel.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eventemitter3_1 = __importDefault(__webpack_require__(/*! eventemitter3 */ \"./node_modules/eventemitter3/index.js\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js\"));\nconst debug = debug_1.default(\"based-dc\");\nconst dataChannelEvents = [\n    \"open\",\n    \"close\",\n    \"error\",\n    \"message\",\n    \"bufferedamountlow\"\n];\nclass BasedDataChannel extends eventemitter3_1.default {\n    constructor(dc) {\n        super();\n        this._dc = dc;\n        this._closed = false;\n        for (const ev of dataChannelEvents) {\n            this._dc.addEventListener(ev, this, false);\n        }\n    }\n    get binaryType() {\n        return this._dc.binaryType;\n    }\n    set binaryType(type) {\n        this._dc.binaryType = type;\n    }\n    get bufferedAmountLowThreshold() {\n        return this._dc.bufferedAmountLowThreshold;\n    }\n    set bufferedAmountLowThreshold(threshold) {\n        this._dc.bufferedAmountLowThreshold = threshold;\n    }\n    get bufferedAmount() {\n        return this._dc.bufferedAmount;\n    }\n    get id() {\n        return this._dc.id;\n    }\n    get label() {\n        return this._dc.label;\n    }\n    get maxPacketLifeTime() {\n        if (\"maxPacketLifeTime\" in this._dc) {\n            return this._dc.maxPacketLifeTime;\n        }\n        return this._dc.maxRetransmitTime;\n    }\n    get maxRetransmits() {\n        return this._dc.maxRetransmits;\n    }\n    get negotiated() {\n        return this._dc.negotiated;\n    }\n    get ordered() {\n        return this._dc.ordered;\n    }\n    get priority() {\n        return this._dc.priority;\n    }\n    get protocol() {\n        return this._dc.protocol;\n    }\n    get readyState() {\n        return this._dc.readyState;\n    }\n    get closed() {\n        return this._closed;\n    }\n    close() {\n        debug(\"close()\");\n        this._closed = true;\n        for (const ev of dataChannelEvents) {\n            this._dc.removeEventListener(ev, this, false);\n        }\n        this._dc.close();\n        this.emit(\"close\");\n        this.removeAllListeners();\n    }\n    send(data) {\n        debug(\"send()\", data);\n        if (this._closed) {\n            throw new Error(\"Closed!\");\n        }\n        if (this._dc.readyState !== \"open\") {\n            throw new Error(\"Not opened!\");\n        }\n        this._dc.send(data);\n    }\n    handleEvent(ev) {\n        if (this._closed)\n            return;\n        switch (ev.type) {\n            case \"open\":\n                return this._handleOpen();\n            case \"close\":\n                return this._handleClose();\n            case \"error\":\n                return this._handleError(ev);\n            case \"message\":\n                return this._handleMessage(ev);\n            case \"bufferedamountlow\":\n                return this._handleBufferedAmountLow();\n        }\n    }\n    _handleOpen() {\n        this.emit(\"open\");\n    }\n    _handleClose() {\n        this.emit(\"close\");\n    }\n    _handleError(ev) {\n        this.emit(\"error\", ev.error);\n    }\n    _handleMessage(ev) {\n        this.emit(\"message\", ev.data);\n    }\n    _handleBufferedAmountLow() {\n        this.emit(\"bufferedamountlow\");\n    }\n}\nexports.default = BasedDataChannel;\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/lib/based-datachannel.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/lib/chunked-datachannel.js":
/*!**********************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/lib/chunked-datachannel.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js\"));\nconst based_datachannel_1 = __importDefault(__webpack_require__(/*! ./based-datachannel */ \"./node_modules/enhanced-datachannel/lib/based-datachannel.js\"));\nconst debug = debug_1.default(\"chunked-dc\");\nconst CHUNK_SIZE = 16000;\nconst META_TYPES = {\n    START: \"START\",\n    END: \"END\"\n};\nclass ChunkedDataChannel extends based_datachannel_1.default {\n    constructor(dc) {\n        super(dc);\n        this._sending = false;\n        this._recving = false;\n        this._recvBuffer = [];\n    }\n    get sending() {\n        return this._sending;\n    }\n    get recving() {\n        return this._recving;\n    }\n    set binaryType(_type) {\n        throw new Error(\"Can not change binaryType!\");\n    }\n    get binaryType() {\n        return this._dc.binaryType;\n    }\n    close() {\n        debug(\"close()\");\n        this._sending = false;\n        this._recving = false;\n        this._recvBuffer.length = 0;\n        super.close();\n    }\n    async send(data, meta = {}) {\n        debug(\"send()\", data, meta);\n        if (this._closed) {\n            throw new Error(\"Closed!\");\n        }\n        if (this._dc.readyState !== \"open\") {\n            throw new Error(\"Not opened!\");\n        }\n        if (this._sending) {\n            throw new Error(\"Can not send files in parallel!\");\n        }\n        if (data instanceof Blob === false) {\n            throw new Error(\"Argument is not an instance of File!\");\n        }\n        if (data.size === 0) {\n            throw new Error(\"Empty file!\");\n        }\n        debug(`data has ${data.size}bytes`);\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            let offset = 0;\n            const readSlice = (nextOffset) => {\n                debug(`read slice of idx ${nextOffset}`);\n                const slice = data.slice(offset, nextOffset + CHUNK_SIZE);\n                fileReader.readAsArrayBuffer(slice);\n            };\n            fileReader.onerror = err => reject(err);\n            fileReader.onabort = () => reject(new Error(\"Read file aborted!\"));\n            fileReader.onload = () => {\n                const { result } = fileReader;\n                if (result === null || typeof result === \"string\") {\n                    return reject(new Error(\"Invalid read result!\"));\n                }\n                debug(\"send slice\");\n                this._dc.send(result);\n                offset += result.byteLength;\n                if (offset < data.size) {\n                    readSlice(offset);\n                }\n                else {\n                    debug(\"signal end sending\");\n                    this._dc.send(JSON.stringify({ type: META_TYPES.END, meta }));\n                    fileReader.onerror = fileReader.onabort = fileReader.onload = null;\n                    this._sending = false;\n                    resolve();\n                }\n            };\n            debug(\"signal start sending\");\n            this._sending = true;\n            this._dc.send(JSON.stringify({ type: META_TYPES.START }));\n            readSlice(0);\n        });\n    }\n    _handleMessage(ev) {\n        const { data } = ev;\n        if (!(typeof data === \"string\" || data instanceof ArrayBuffer))\n            return;\n        if (typeof data === \"string\") {\n            const { type, meta } = JSON.parse(data);\n            if (type === META_TYPES.START) {\n                debug(\"start recving\");\n                this._recving = true;\n            }\n            if (type === META_TYPES.END) {\n                debug(\"end recving\");\n                this.emit(\"message\", new Blob(this._recvBuffer), meta);\n                this._recving = false;\n                this._recvBuffer.length = 0;\n            }\n            return;\n        }\n        debug(\"recv chunk\");\n        this._recvBuffer.push(data);\n    }\n}\nexports.default = ChunkedDataChannel;\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/lib/chunked-datachannel.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/enhanced-datachannel/lib/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst based_datachannel_1 = __importDefault(__webpack_require__(/*! ./based-datachannel */ \"./node_modules/enhanced-datachannel/lib/based-datachannel.js\"));\nconst promised_datachannel_1 = __importDefault(__webpack_require__(/*! ./promised-datachannel */ \"./node_modules/enhanced-datachannel/lib/promised-datachannel.js\"));\nconst chunked_datachannel_1 = __importDefault(__webpack_require__(/*! ./chunked-datachannel */ \"./node_modules/enhanced-datachannel/lib/chunked-datachannel.js\"));\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js\"));\nconst debug = debug_1.default(\"enhanced-dc\");\nfunction based(dc) {\n    if (dc instanceof RTCDataChannel === false) {\n        throw new Error(\"Missing datachannel instance!\");\n    }\n    return new based_datachannel_1.default(dc);\n}\nexports.based = based;\nfunction promised(dc) {\n    if (dc instanceof RTCDataChannel === false) {\n        throw new Error(\"Missing datachannel instance!\");\n    }\n    if (!dc.ordered) {\n        throw new Error(\"The ordered property must be true!\");\n    }\n    return new promised_datachannel_1.default(dc);\n}\nexports.promised = promised;\nfunction chunked(dc) {\n    if (dc instanceof RTCDataChannel === false) {\n        throw new Error(\"Missing datachannel instance!\");\n    }\n    if (!dc.ordered) {\n        throw new Error(\"The ordered property must be true!\");\n    }\n    if (dc.binaryType !== \"arraybuffer\") {\n        debug(`change binaryType ${dc.binaryType} -> arraybuffer`);\n        dc.binaryType = \"arraybuffer\";\n    }\n    return new chunked_datachannel_1.default(dc);\n}\nexports.chunked = chunked;\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/lib/index.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/lib/promised-datachannel.js":
/*!***********************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/lib/promised-datachannel.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst debug_1 = __importDefault(__webpack_require__(/*! debug */ \"./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js\"));\nconst based_datachannel_1 = __importDefault(__webpack_require__(/*! ./based-datachannel */ \"./node_modules/enhanced-datachannel/lib/based-datachannel.js\"));\nconst debug = debug_1.default(\"promised-dc\");\nconst PAYLOAD_TYPES = {\n    REQUEST: 0,\n    SUCCESS_RESPONSE: 1,\n    ERROR_RESPONSE: 2\n};\nclass PromisedDataChannel extends based_datachannel_1.default {\n    constructor(dc) {\n        super(dc);\n        this._sentRequests = new Map();\n    }\n    close() {\n        debug(\"close()\");\n        for (const sentRequest of this._sentRequests.values()) {\n            sentRequest.close();\n        }\n        this._sentRequests.clear();\n        super.close();\n    }\n    async send(data) {\n        debug(\"send()\", data);\n        if (this._closed) {\n            throw new Error(\"Closed!\");\n        }\n        if (this._dc.readyState !== \"open\") {\n            throw new Error(\"Not opened!\");\n        }\n        const id = String(Math.random()).slice(2, 6);\n        const request = {\n            type: PAYLOAD_TYPES.REQUEST,\n            id,\n            data\n        };\n        this._sendMessage(request);\n        return new Promise((resolve, reject) => {\n            const timeout = 1000 + 500 * this._sentRequests.size;\n            const sentRequest = {\n                timer: window.setTimeout(() => {\n                    if (!this._sentRequests.delete(request.id))\n                        return;\n                    reject(new Error(\"Timeout!\"));\n                }, timeout),\n                resolve: (res) => {\n                    if (!this._sentRequests.delete(request.id))\n                        return;\n                    window.clearTimeout(sentRequest.timer);\n                    resolve(res);\n                },\n                reject: (err) => {\n                    if (!this._sentRequests.delete(request.id))\n                        return;\n                    window.clearTimeout(sentRequest.timer);\n                    reject(err);\n                },\n                close: () => {\n                    if (!this._sentRequests.delete(request.id))\n                        return;\n                    window.clearTimeout(sentRequest.timer);\n                    reject(new Error(\"Closed!\"));\n                }\n            };\n            this._sentRequests.set(id, sentRequest);\n        });\n    }\n    _sendMessage(data) {\n        this._dc.send(JSON.stringify(data));\n    }\n    _handleMessage(ev) {\n        const evData = JSON.parse(ev.data);\n        switch (evData.type) {\n            case PAYLOAD_TYPES.REQUEST:\n                return this._handleRequest(evData);\n            case PAYLOAD_TYPES.SUCCESS_RESPONSE:\n            case PAYLOAD_TYPES.ERROR_RESPONSE:\n                return this._handleResponse(evData);\n        }\n    }\n    _handleRequest(request) {\n        try {\n            this.emit(\"message\", request.data, (data) => {\n                this._sendMessage({\n                    type: PAYLOAD_TYPES.SUCCESS_RESPONSE,\n                    id: request.id,\n                    data\n                });\n            }, (err) => {\n                this._sendMessage({\n                    type: PAYLOAD_TYPES.ERROR_RESPONSE,\n                    id: request.id,\n                    err: err.toString()\n                });\n            });\n        }\n        catch (err) {\n            this._sendMessage({\n                type: PAYLOAD_TYPES.ERROR_RESPONSE,\n                id: request.id,\n                err: err.toString()\n            });\n        }\n    }\n    _handleResponse(response) {\n        const sentRequest = this._sentRequests.get(response.id);\n        if (!sentRequest) {\n            debug(\"sent request not found...\");\n            return;\n        }\n        if (\"err\" in response) {\n            return sentRequest.reject(new Error(response.err));\n        }\n        return sentRequest.resolve(response.data);\n    }\n}\nexports.default = PromisedDataChannel;\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/lib/promised-datachannel.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/enhanced-datachannel/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/node_modules/debug/src/browser.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/node_modules/debug/src/common.js":
/*!****************************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/node_modules/debug/src/common.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/enhanced-datachannel/node_modules/ms/index.js\");\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/node_modules/debug/src/common.js?");

/***/ }),

/***/ "./node_modules/enhanced-datachannel/node_modules/ms/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/enhanced-datachannel/node_modules/ms/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n\n//# sourceURL=webpack:///./node_modules/enhanced-datachannel/node_modules/ms/index.js?");

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif (true) {\n  module.exports = EventEmitter;\n}\n\n\n//# sourceURL=webpack:///./node_modules/eventemitter3/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ })

/******/ });